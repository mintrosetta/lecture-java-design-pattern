Simple Factory
    เป็นรูปแบบการออกแบบที่มีวัตถุประสงค์เพื่อสร้างวัตถุ โดยขึ้นอยู่กับการจัดสินใจเรื่องชนิดของวัตถุที่ต้องการสร้างไว้ในที่เดียว
    โดย simple factory ไม่นับเป็น design pattern เพราะเป็นเพียงการห่อหุ้มวัตถุ (Encapsulation)

    โดยเราจะใช้ก็ต่อเมื่อเรามีมากกว่า 1 ตัวเลือกในการสร้าง instance ของวัตถุ และการเลือกตัวเลือกนั้นขึ้นอยู่กับตรรกะ

    ปัญหา
        สมมุติว่าเรามีโค้ดที่มีเงื่อนไขในการสร้างวัตถุ
            if (input == 1) {
                new Pudding();
            } else if (input == 2) {
                new Cake();
            }

    แก้ปัญหาอะไร ?

    UML Example 
        - Product เป็นคลาสที่เป็นแม่แบบให้กับ sub classes โดยอาบเป็น interface หรือ abstract
        - ProductA, ProductB เป็น sub class ที่สืบทอด Product
        - SimpleFactory เป็น static class โดยในคลาสจะมี static method ที่ใช้สำหรับสร้าง product
 
    ขั้นตอนการใช้งาน simple factory 
        - สร้างคลาสแยกออกมาต่างหาก ซึ่งจะเป็น simple factory ของเรา
        - ภายในคลาสจะมีวิธีการส่งคืน instance ของคลาสที่เราต้องการ
        - โดยทั่วไป วิธีการสร้างจะใช้รูปแบบ static method พร้อมกับรับ arguments

    ข้อพิจรณาในการใช้ simple factory
        - เป็นเพียงวิธีการสร้างคลาสที่เรามีอยู่ ทำให้คล้ายอื่น ๆ ของเราสามารถใช้งานง่าย โดยไม่ำจเป็นต้องนำเข้าโค้ดที่ไม่เกี่ยวข้อง
        - ไม่จำเป็นต้องติดตามสถานะใด ๆ
        - สามารถใช้รูปแบบอื่น ๆ มาผสมได้ในการออกแบบ simple factory

    ข้อผิดพลาด
        โอกาสที่จะเกิดข้อผิดลาดของ design pattern นี้คือเงื่อนไขที่ใช้ในการสร้างวัตถุ ยิ่งนานไวไป เงื่อนไขจะซับซ้อนขึ้นเรื่อย ๆ
